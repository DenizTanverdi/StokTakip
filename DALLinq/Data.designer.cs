#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StokTakipD")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDetay(Detay instance);
    partial void UpdateDetay(Detay instance);
    partial void DeleteDetay(Detay instance);
    partial void InsertKategori(Kategori instance);
    partial void UpdateKategori(Kategori instance);
    partial void DeleteKategori(Kategori instance);
    partial void InsertMusteri(Musteri instance);
    partial void UpdateMusteri(Musteri instance);
    partial void DeleteMusteri(Musteri instance);
    partial void InsertPersonel(Personel instance);
    partial void UpdatePersonel(Personel instance);
    partial void DeletePersonel(Personel instance);
    partial void InsertSipari(Sipari instance);
    partial void UpdateSipari(Sipari instance);
    partial void DeleteSipari(Sipari instance);
    partial void InsertTedarikci(Tedarikci instance);
    partial void UpdateTedarikci(Tedarikci instance);
    partial void DeleteTedarikci(Tedarikci instance);
    partial void InsertUrunler(Urunler instance);
    partial void UpdateUrunler(Urunler instance);
    partial void DeleteUrunler(Urunler instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DALLinq.Properties.Settings.Default.StokTakipDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Detay> Detays
		{
			get
			{
				return this.GetTable<Detay>();
			}
		}
		
		public System.Data.Linq.Table<Kategori> Kategoris
		{
			get
			{
				return this.GetTable<Kategori>();
			}
		}
		
		public System.Data.Linq.Table<Musteri> Musteris
		{
			get
			{
				return this.GetTable<Musteri>();
			}
		}
		
		public System.Data.Linq.Table<Personel> Personels
		{
			get
			{
				return this.GetTable<Personel>();
			}
		}
		
		public System.Data.Linq.Table<Sipari> Siparis
		{
			get
			{
				return this.GetTable<Sipari>();
			}
		}
		
		public System.Data.Linq.Table<Tedarikci> Tedarikcis
		{
			get
			{
				return this.GetTable<Tedarikci>();
			}
		}
		
		public System.Data.Linq.Table<Urunler> Urunlers
		{
			get
			{
				return this.GetTable<Urunler>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detay")]
	public partial class Detay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dId;
		
		private int _sId;
		
		private int _pId;
		
		private decimal _fiyat;
		
		private System.Nullable<int> _indirim;
		
		private int _miktar;
		
		private EntityRef<Sipari> _Sipari;
		
		private EntityRef<Urunler> _Urunler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndIdChanging(int value);
    partial void OndIdChanged();
    partial void OnsIdChanging(int value);
    partial void OnsIdChanged();
    partial void OnpIdChanging(int value);
    partial void OnpIdChanged();
    partial void OnfiyatChanging(decimal value);
    partial void OnfiyatChanged();
    partial void OnindirimChanging(System.Nullable<int> value);
    partial void OnindirimChanged();
    partial void OnmiktarChanging(int value);
    partial void OnmiktarChanged();
    #endregion
		
		public Detay()
		{
			this._Sipari = default(EntityRef<Sipari>);
			this._Urunler = default(EntityRef<Urunler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dId
		{
			get
			{
				return this._dId;
			}
			set
			{
				if ((this._dId != value))
				{
					this.OndIdChanging(value);
					this.SendPropertyChanging();
					this._dId = value;
					this.SendPropertyChanged("dId");
					this.OndIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sId", DbType="Int NOT NULL")]
		public int sId
		{
			get
			{
				return this._sId;
			}
			set
			{
				if ((this._sId != value))
				{
					if (this._Sipari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsIdChanging(value);
					this.SendPropertyChanging();
					this._sId = value;
					this.SendPropertyChanged("sId");
					this.OnsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pId", DbType="Int NOT NULL")]
		public int pId
		{
			get
			{
				return this._pId;
			}
			set
			{
				if ((this._pId != value))
				{
					if (this._Urunler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpIdChanging(value);
					this.SendPropertyChanging();
					this._pId = value;
					this.SendPropertyChanged("pId");
					this.OnpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiyat", DbType="Money NOT NULL")]
		public decimal fiyat
		{
			get
			{
				return this._fiyat;
			}
			set
			{
				if ((this._fiyat != value))
				{
					this.OnfiyatChanging(value);
					this.SendPropertyChanging();
					this._fiyat = value;
					this.SendPropertyChanged("fiyat");
					this.OnfiyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirim", DbType="Int")]
		public System.Nullable<int> indirim
		{
			get
			{
				return this._indirim;
			}
			set
			{
				if ((this._indirim != value))
				{
					this.OnindirimChanging(value);
					this.SendPropertyChanging();
					this._indirim = value;
					this.SendPropertyChanged("indirim");
					this.OnindirimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miktar", DbType="Int NOT NULL")]
		public int miktar
		{
			get
			{
				return this._miktar;
			}
			set
			{
				if ((this._miktar != value))
				{
					this.OnmiktarChanging(value);
					this.SendPropertyChanging();
					this._miktar = value;
					this.SendPropertyChanged("miktar");
					this.OnmiktarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sipari_Detay", Storage="_Sipari", ThisKey="sId", OtherKey="sId", IsForeignKey=true)]
		public Sipari Sipari
		{
			get
			{
				return this._Sipari.Entity;
			}
			set
			{
				Sipari previousValue = this._Sipari.Entity;
				if (((previousValue != value) 
							|| (this._Sipari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sipari.Entity = null;
						previousValue.Detays.Remove(this);
					}
					this._Sipari.Entity = value;
					if ((value != null))
					{
						value.Detays.Add(this);
						this._sId = value.sId;
					}
					else
					{
						this._sId = default(int);
					}
					this.SendPropertyChanged("Sipari");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_Detay", Storage="_Urunler", ThisKey="pId", OtherKey="pId", IsForeignKey=true)]
		public Urunler Urunler
		{
			get
			{
				return this._Urunler.Entity;
			}
			set
			{
				Urunler previousValue = this._Urunler.Entity;
				if (((previousValue != value) 
							|| (this._Urunler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Urunler.Entity = null;
						previousValue.Detays.Remove(this);
					}
					this._Urunler.Entity = value;
					if ((value != null))
					{
						value.Detays.Add(this);
						this._pId = value.pId;
					}
					else
					{
						this._pId = default(int);
					}
					this.SendPropertyChanged("Urunler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategori")]
	public partial class Kategori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ctId;
		
		private string _kategoriAdi;
		
		private EntityRef<Kategori> _Kategori2;
		
		private EntitySet<Urunler> _Urunlers;
		
		private EntityRef<Kategori> _Kategori1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnctIdChanging(int value);
    partial void OnctIdChanged();
    partial void OnkategoriAdiChanging(string value);
    partial void OnkategoriAdiChanged();
    #endregion
		
		public Kategori()
		{
			this._Kategori2 = default(EntityRef<Kategori>);
			this._Urunlers = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunlers), new Action<Urunler>(this.detach_Urunlers));
			this._Kategori1 = default(EntityRef<Kategori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ctId
		{
			get
			{
				return this._ctId;
			}
			set
			{
				if ((this._ctId != value))
				{
					if (this._Kategori1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnctIdChanging(value);
					this.SendPropertyChanging();
					this._ctId = value;
					this.SendPropertyChanged("ctId");
					this.OnctIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategoriAdi", DbType="VarChar(50)")]
		public string kategoriAdi
		{
			get
			{
				return this._kategoriAdi;
			}
			set
			{
				if ((this._kategoriAdi != value))
				{
					this.OnkategoriAdiChanging(value);
					this.SendPropertyChanging();
					this._kategoriAdi = value;
					this.SendPropertyChanged("kategoriAdi");
					this.OnkategoriAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Kategori", Storage="_Kategori2", ThisKey="ctId", OtherKey="ctId", IsUnique=true, IsForeignKey=false)]
		public Kategori Kategori2
		{
			get
			{
				return this._Kategori2.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori2.Entity;
				if (((previousValue != value) 
							|| (this._Kategori2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori2.Entity = null;
						previousValue.Kategori1 = null;
					}
					this._Kategori2.Entity = value;
					if ((value != null))
					{
						value.Kategori1 = this;
					}
					this.SendPropertyChanged("Kategori2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Urunler", Storage="_Urunlers", ThisKey="ctId", OtherKey="ctId")]
		public EntitySet<Urunler> Urunlers
		{
			get
			{
				return this._Urunlers;
			}
			set
			{
				this._Urunlers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Kategori", Storage="_Kategori1", ThisKey="ctId", OtherKey="ctId", IsForeignKey=true)]
		public Kategori Kategori1
		{
			get
			{
				return this._Kategori1.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori1.Entity;
				if (((previousValue != value) 
							|| (this._Kategori1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori1.Entity = null;
						previousValue.Kategori2 = null;
					}
					this._Kategori1.Entity = value;
					if ((value != null))
					{
						value.Kategori2 = this;
						this._ctId = value.ctId;
					}
					else
					{
						this._ctId = default(int);
					}
					this.SendPropertyChanged("Kategori1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = this;
		}
		
		private void detach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Musteri")]
	public partial class Musteri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mId;
		
		private string _name;
		
		private string _city;
		
		private int _tel;
		
		private EntitySet<Sipari> _Siparis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmIdChanging(int value);
    partial void OnmIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OntelChanging(int value);
    partial void OntelChanged();
    #endregion
		
		public Musteri()
		{
			this._Siparis = new EntitySet<Sipari>(new Action<Sipari>(this.attach_Siparis), new Action<Sipari>(this.detach_Siparis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="Int NOT NULL")]
		public int tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteri_Sipari", Storage="_Siparis", ThisKey="mId", OtherKey="mId")]
		public EntitySet<Sipari> Siparis
		{
			get
			{
				return this._Siparis;
			}
			set
			{
				this._Siparis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Siparis(Sipari entity)
		{
			this.SendPropertyChanging();
			entity.Musteri = this;
		}
		
		private void detach_Siparis(Sipari entity)
		{
			this.SendPropertyChanging();
			entity.Musteri = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personel")]
	public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _calisanid;
		
		private string _CalisanAdı;
		
		private string _CalisanSoyadi;
		
		private string _Görev;
		
		private string _Sehir;
		
		private string _TelNo;
		
		private EntitySet<Sipari> _Siparis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncalisanidChanging(int value);
    partial void OncalisanidChanged();
    partial void OnCalisanAdıChanging(string value);
    partial void OnCalisanAdıChanged();
    partial void OnCalisanSoyadiChanging(string value);
    partial void OnCalisanSoyadiChanged();
    partial void OnGörevChanging(string value);
    partial void OnGörevChanged();
    partial void OnSehirChanging(string value);
    partial void OnSehirChanged();
    partial void OnTelNoChanging(string value);
    partial void OnTelNoChanged();
    #endregion
		
		public Personel()
		{
			this._Siparis = new EntitySet<Sipari>(new Action<Sipari>(this.attach_Siparis), new Action<Sipari>(this.detach_Siparis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calisanid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int calisanid
		{
			get
			{
				return this._calisanid;
			}
			set
			{
				if ((this._calisanid != value))
				{
					this.OncalisanidChanging(value);
					this.SendPropertyChanging();
					this._calisanid = value;
					this.SendPropertyChanged("calisanid");
					this.OncalisanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalisanAdı", DbType="VarChar(50)")]
		public string CalisanAdı
		{
			get
			{
				return this._CalisanAdı;
			}
			set
			{
				if ((this._CalisanAdı != value))
				{
					this.OnCalisanAdıChanging(value);
					this.SendPropertyChanging();
					this._CalisanAdı = value;
					this.SendPropertyChanged("CalisanAdı");
					this.OnCalisanAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalisanSoyadi", DbType="VarChar(50)")]
		public string CalisanSoyadi
		{
			get
			{
				return this._CalisanSoyadi;
			}
			set
			{
				if ((this._CalisanSoyadi != value))
				{
					this.OnCalisanSoyadiChanging(value);
					this.SendPropertyChanging();
					this._CalisanSoyadi = value;
					this.SendPropertyChanged("CalisanSoyadi");
					this.OnCalisanSoyadiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Görev", DbType="VarChar(50)")]
		public string Görev
		{
			get
			{
				return this._Görev;
			}
			set
			{
				if ((this._Görev != value))
				{
					this.OnGörevChanging(value);
					this.SendPropertyChanging();
					this._Görev = value;
					this.SendPropertyChanged("Görev");
					this.OnGörevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="VarChar(50)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNo", DbType="VarChar(50)")]
		public string TelNo
		{
			get
			{
				return this._TelNo;
			}
			set
			{
				if ((this._TelNo != value))
				{
					this.OnTelNoChanging(value);
					this.SendPropertyChanging();
					this._TelNo = value;
					this.SendPropertyChanged("TelNo");
					this.OnTelNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Sipari", Storage="_Siparis", ThisKey="calisanid", OtherKey="calisanId")]
		public EntitySet<Sipari> Siparis
		{
			get
			{
				return this._Siparis;
			}
			set
			{
				this._Siparis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Siparis(Sipari entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Siparis(Sipari entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Siparis")]
	public partial class Sipari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sId;
		
		private int _mId;
		
		private int _calisanId;
		
		private System.DateTime _SiparisTarih;
		
		private EntitySet<Detay> _Detays;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Musteri> _Musteri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsIdChanging(int value);
    partial void OnsIdChanged();
    partial void OnmIdChanging(int value);
    partial void OnmIdChanged();
    partial void OncalisanIdChanging(int value);
    partial void OncalisanIdChanged();
    partial void OnSiparisTarihChanging(System.DateTime value);
    partial void OnSiparisTarihChanged();
    #endregion
		
		public Sipari()
		{
			this._Detays = new EntitySet<Detay>(new Action<Detay>(this.attach_Detays), new Action<Detay>(this.detach_Detays));
			this._Personel = default(EntityRef<Personel>);
			this._Musteri = default(EntityRef<Musteri>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sId
		{
			get
			{
				return this._sId;
			}
			set
			{
				if ((this._sId != value))
				{
					this.OnsIdChanging(value);
					this.SendPropertyChanging();
					this._sId = value;
					this.SendPropertyChanged("sId");
					this.OnsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="Int NOT NULL")]
		public int mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Musteri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calisanId", DbType="Int NOT NULL")]
		public int calisanId
		{
			get
			{
				return this._calisanId;
			}
			set
			{
				if ((this._calisanId != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncalisanIdChanging(value);
					this.SendPropertyChanging();
					this._calisanId = value;
					this.SendPropertyChanged("calisanId");
					this.OncalisanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiparisTarih", DbType="DateTime NOT NULL")]
		public System.DateTime SiparisTarih
		{
			get
			{
				return this._SiparisTarih;
			}
			set
			{
				if ((this._SiparisTarih != value))
				{
					this.OnSiparisTarihChanging(value);
					this.SendPropertyChanging();
					this._SiparisTarih = value;
					this.SendPropertyChanged("SiparisTarih");
					this.OnSiparisTarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sipari_Detay", Storage="_Detays", ThisKey="sId", OtherKey="sId")]
		public EntitySet<Detay> Detays
		{
			get
			{
				return this._Detays;
			}
			set
			{
				this._Detays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Sipari", Storage="_Personel", ThisKey="calisanId", OtherKey="calisanid", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Siparis.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Siparis.Add(this);
						this._calisanId = value.calisanid;
					}
					else
					{
						this._calisanId = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteri_Sipari", Storage="_Musteri", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Musteri Musteri
		{
			get
			{
				return this._Musteri.Entity;
			}
			set
			{
				Musteri previousValue = this._Musteri.Entity;
				if (((previousValue != value) 
							|| (this._Musteri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Musteri.Entity = null;
						previousValue.Siparis.Remove(this);
					}
					this._Musteri.Entity = value;
					if ((value != null))
					{
						value.Siparis.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(int);
					}
					this.SendPropertyChanged("Musteri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detays(Detay entity)
		{
			this.SendPropertyChanging();
			entity.Sipari = this;
		}
		
		private void detach_Detays(Detay entity)
		{
			this.SendPropertyChanging();
			entity.Sipari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tedarikci")]
	public partial class Tedarikci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tdId;
		
		private string _tedarikciAdi;
		
		private string _ulke;
		
		private string _tel;
		
		private string _il;
		
		private string _ilce;
		
		private EntitySet<Urunler> _Urunlers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntdIdChanging(int value);
    partial void OntdIdChanged();
    partial void OntedarikciAdiChanging(string value);
    partial void OntedarikciAdiChanged();
    partial void OnulkeChanging(string value);
    partial void OnulkeChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnilChanging(string value);
    partial void OnilChanged();
    partial void OnilceChanging(string value);
    partial void OnilceChanged();
    #endregion
		
		public Tedarikci()
		{
			this._Urunlers = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunlers), new Action<Urunler>(this.detach_Urunlers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tdId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tdId
		{
			get
			{
				return this._tdId;
			}
			set
			{
				if ((this._tdId != value))
				{
					this.OntdIdChanging(value);
					this.SendPropertyChanging();
					this._tdId = value;
					this.SendPropertyChanged("tdId");
					this.OntdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tedarikciAdi", DbType="VarChar(50)")]
		public string tedarikciAdi
		{
			get
			{
				return this._tedarikciAdi;
			}
			set
			{
				if ((this._tedarikciAdi != value))
				{
					this.OntedarikciAdiChanging(value);
					this.SendPropertyChanging();
					this._tedarikciAdi = value;
					this.SendPropertyChanged("tedarikciAdi");
					this.OntedarikciAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ulke", DbType="VarChar(50)")]
		public string ulke
		{
			get
			{
				return this._ulke;
			}
			set
			{
				if ((this._ulke != value))
				{
					this.OnulkeChanging(value);
					this.SendPropertyChanging();
					this._ulke = value;
					this.SendPropertyChanged("ulke");
					this.OnulkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_il", DbType="VarChar(50)")]
		public string il
		{
			get
			{
				return this._il;
			}
			set
			{
				if ((this._il != value))
				{
					this.OnilChanging(value);
					this.SendPropertyChanging();
					this._il = value;
					this.SendPropertyChanged("il");
					this.OnilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilce", DbType="NVarChar(50)")]
		public string ilce
		{
			get
			{
				return this._ilce;
			}
			set
			{
				if ((this._ilce != value))
				{
					this.OnilceChanging(value);
					this.SendPropertyChanging();
					this._ilce = value;
					this.SendPropertyChanged("ilce");
					this.OnilceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tedarikci_Urunler", Storage="_Urunlers", ThisKey="tdId", OtherKey="tdId")]
		public EntitySet<Urunler> Urunlers
		{
			get
			{
				return this._Urunlers;
			}
			set
			{
				this._Urunlers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Tedarikci = this;
		}
		
		private void detach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Tedarikci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Urunler")]
	public partial class Urunler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pId;
		
		private string _UrunAdi;
		
		private System.Nullable<int> _Adet;
		
		private System.Nullable<decimal> _Fiyat;
		
		private System.Nullable<int> _UstId;
		
		private int _tdId;
		
		private int _ctId;
		
		private EntitySet<Detay> _Detays;
		
		private EntitySet<Urunler> _Urunlers;
		
		private EntityRef<Kategori> _Kategori;
		
		private EntityRef<Tedarikci> _Tedarikci;
		
		private EntityRef<Urunler> _Urunler1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpIdChanging(int value);
    partial void OnpIdChanged();
    partial void OnUrunAdiChanging(string value);
    partial void OnUrunAdiChanged();
    partial void OnAdetChanging(System.Nullable<int> value);
    partial void OnAdetChanged();
    partial void OnFiyatChanging(System.Nullable<decimal> value);
    partial void OnFiyatChanged();
    partial void OnUstIdChanging(System.Nullable<int> value);
    partial void OnUstIdChanged();
    partial void OntdIdChanging(int value);
    partial void OntdIdChanged();
    partial void OnctIdChanging(int value);
    partial void OnctIdChanged();
    #endregion
		
		public Urunler()
		{
			this._Detays = new EntitySet<Detay>(new Action<Detay>(this.attach_Detays), new Action<Detay>(this.detach_Detays));
			this._Urunlers = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunlers), new Action<Urunler>(this.detach_Urunlers));
			this._Kategori = default(EntityRef<Kategori>);
			this._Tedarikci = default(EntityRef<Tedarikci>);
			this._Urunler1 = default(EntityRef<Urunler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pId
		{
			get
			{
				return this._pId;
			}
			set
			{
				if ((this._pId != value))
				{
					this.OnpIdChanging(value);
					this.SendPropertyChanging();
					this._pId = value;
					this.SendPropertyChanged("pId");
					this.OnpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunAdi", DbType="VarChar(50)")]
		public string UrunAdi
		{
			get
			{
				return this._UrunAdi;
			}
			set
			{
				if ((this._UrunAdi != value))
				{
					this.OnUrunAdiChanging(value);
					this.SendPropertyChanging();
					this._UrunAdi = value;
					this.SendPropertyChanged("UrunAdi");
					this.OnUrunAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adet", DbType="Int")]
		public System.Nullable<int> Adet
		{
			get
			{
				return this._Adet;
			}
			set
			{
				if ((this._Adet != value))
				{
					this.OnAdetChanging(value);
					this.SendPropertyChanging();
					this._Adet = value;
					this.SendPropertyChanged("Adet");
					this.OnAdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fiyat", DbType="Money")]
		public System.Nullable<decimal> Fiyat
		{
			get
			{
				return this._Fiyat;
			}
			set
			{
				if ((this._Fiyat != value))
				{
					this.OnFiyatChanging(value);
					this.SendPropertyChanging();
					this._Fiyat = value;
					this.SendPropertyChanged("Fiyat");
					this.OnFiyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UstId", DbType="Int")]
		public System.Nullable<int> UstId
		{
			get
			{
				return this._UstId;
			}
			set
			{
				if ((this._UstId != value))
				{
					if (this._Urunler1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUstIdChanging(value);
					this.SendPropertyChanging();
					this._UstId = value;
					this.SendPropertyChanged("UstId");
					this.OnUstIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tdId", DbType="Int NOT NULL")]
		public int tdId
		{
			get
			{
				return this._tdId;
			}
			set
			{
				if ((this._tdId != value))
				{
					if (this._Tedarikci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntdIdChanging(value);
					this.SendPropertyChanging();
					this._tdId = value;
					this.SendPropertyChanged("tdId");
					this.OntdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctId", DbType="Int NOT NULL")]
		public int ctId
		{
			get
			{
				return this._ctId;
			}
			set
			{
				if ((this._ctId != value))
				{
					if (this._Kategori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnctIdChanging(value);
					this.SendPropertyChanging();
					this._ctId = value;
					this.SendPropertyChanged("ctId");
					this.OnctIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_Detay", Storage="_Detays", ThisKey="pId", OtherKey="pId")]
		public EntitySet<Detay> Detays
		{
			get
			{
				return this._Detays;
			}
			set
			{
				this._Detays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_Urunler", Storage="_Urunlers", ThisKey="pId", OtherKey="UstId")]
		public EntitySet<Urunler> Urunlers
		{
			get
			{
				return this._Urunlers;
			}
			set
			{
				this._Urunlers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Urunler", Storage="_Kategori", ThisKey="ctId", OtherKey="ctId", IsForeignKey=true)]
		public Kategori Kategori
		{
			get
			{
				return this._Kategori.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori.Entity;
				if (((previousValue != value) 
							|| (this._Kategori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori.Entity = null;
						previousValue.Urunlers.Remove(this);
					}
					this._Kategori.Entity = value;
					if ((value != null))
					{
						value.Urunlers.Add(this);
						this._ctId = value.ctId;
					}
					else
					{
						this._ctId = default(int);
					}
					this.SendPropertyChanged("Kategori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tedarikci_Urunler", Storage="_Tedarikci", ThisKey="tdId", OtherKey="tdId", IsForeignKey=true)]
		public Tedarikci Tedarikci
		{
			get
			{
				return this._Tedarikci.Entity;
			}
			set
			{
				Tedarikci previousValue = this._Tedarikci.Entity;
				if (((previousValue != value) 
							|| (this._Tedarikci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tedarikci.Entity = null;
						previousValue.Urunlers.Remove(this);
					}
					this._Tedarikci.Entity = value;
					if ((value != null))
					{
						value.Urunlers.Add(this);
						this._tdId = value.tdId;
					}
					else
					{
						this._tdId = default(int);
					}
					this.SendPropertyChanged("Tedarikci");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_Urunler", Storage="_Urunler1", ThisKey="UstId", OtherKey="pId", IsForeignKey=true)]
		public Urunler Urunler1
		{
			get
			{
				return this._Urunler1.Entity;
			}
			set
			{
				Urunler previousValue = this._Urunler1.Entity;
				if (((previousValue != value) 
							|| (this._Urunler1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Urunler1.Entity = null;
						previousValue.Urunlers.Remove(this);
					}
					this._Urunler1.Entity = value;
					if ((value != null))
					{
						value.Urunlers.Add(this);
						this._UstId = value.pId;
					}
					else
					{
						this._UstId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Urunler1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detays(Detay entity)
		{
			this.SendPropertyChanging();
			entity.Urunler = this;
		}
		
		private void detach_Detays(Detay entity)
		{
			this.SendPropertyChanging();
			entity.Urunler = null;
		}
		
		private void attach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Urunler1 = this;
		}
		
		private void detach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Urunler1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _email;
		
		private string _pasword;
		
		private System.Nullable<bool> _isLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpaswordChanging(string value);
    partial void OnpaswordChanged();
    partial void OnisLoginChanging(System.Nullable<bool> value);
    partial void OnisLoginChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasword", DbType="NVarChar(50)")]
		public string pasword
		{
			get
			{
				return this._pasword;
			}
			set
			{
				if ((this._pasword != value))
				{
					this.OnpaswordChanging(value);
					this.SendPropertyChanging();
					this._pasword = value;
					this.SendPropertyChanged("pasword");
					this.OnpaswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLogin", DbType="Bit")]
		public System.Nullable<bool> isLogin
		{
			get
			{
				return this._isLogin;
			}
			set
			{
				if ((this._isLogin != value))
				{
					this.OnisLoginChanging(value);
					this.SendPropertyChanging();
					this._isLogin = value;
					this.SendPropertyChanged("isLogin");
					this.OnisLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
